// Generated by CoffeeScript 1.11.1
Ext.define('FM.model.File', {
  extend: 'Ext.data.Model',
  fields: [
    {
      name: "is_dir",
      type: "boolean",
      defaultValue: false
    }, {
      name: "is_link",
      type: "boolean",
      defaultValue: false
    }, {
      name: "is_share",
      type: "boolean",
      defaultValue: false
    }, {
      name: "is_share_write",
      type: "boolean",
      defaultValue: false
    }, {
      name: "loaded",
      type: "boolean",
      defaultValue: false
    }, {
      name: "name"
    }, {
      name: "path"
    }, {
      name: "src",
      defaultValue: void 0
    }, {
      name: "ext",
      defaultValue: ''
    }, {
      name: "owner"
    }, {
      name: "base64",
      defaultValue: ''
    }, {
      name: "color",
      defaultValue: false
    }, {
      name: "mode"
    }, {
      name: "size",
      type: "int",
      defaultValue: 0
    }, {
      name: "mtime",
      type: "date",
      dateFormat: "timestamp"
    }, {
      name: "mtime_str"
    }, {
      name: "pid"
    }
  ],
  isAllowed: function(action, panel, multiple) {
    var action_name, allowed_multiple, panel_action, record_action, record_actions, ref;
    if (multiple == null) {
      multiple = false;
    }
    action_name = action.self.getName();
    FM.Logger.debug('Checking isAllowed() record action', arguments);
    allowed_multiple = {};
    allowed_multiple[FM.Actions.DownloadArchive.self.getName()] = true;
    allowed_multiple[FM.Actions.DownloadZip.self.getName()] = true;
    allowed_multiple[FM.Actions.DownloadBZ2.self.getName()] = true;
    allowed_multiple[FM.Actions.DownloadGZip.self.getName()] = true;
    allowed_multiple[FM.Actions.DownloadTar.self.getName()] = true;
    allowed_multiple[FM.Actions.CreateArchive.self.getName()] = true;
    allowed_multiple[FM.Actions.CreateCopy.self.getName()] = true;
    allowed_multiple[FM.Actions.Copy.self.getName()] = true;
    allowed_multiple[FM.Actions.Move.self.getName()] = true;
    allowed_multiple[FM.Actions.Chmod.self.getName()] = true;
    allowed_multiple[FM.Actions.Remove.self.getName()] = true;
    allowed_multiple[FM.Actions.Refresh.self.getName()] = true;
    if (multiple && (allowed_multiple[action_name] == null) && !allowed_multiple[action_name]) {
      return false;
    }
    if (FM.Actions.ExtractArchive.self.getName() === action_name && ((ref = this.get("ext")) === 'zip' || ref === 'rar' || ref === '7z' || ref === 'gz' || ref === 'bz2' || ref === 'arch')) {
      return true;
    }
    if (panel.actions[action_name] != null) {
      panel_action = panel.actions[action_name];
      record_actions = this.get('actions');
      if ((record_actions != null) && (record_actions[action_name] != null)) {
        record_action = record_actions[action_name];
        if (record_action) {
          return true;
        } else {
          return false;
        }
      } else {
        if (panel_action) {
          return true;
        } else {
          return false;
        }
      }
    }
    return false;
  }
});
